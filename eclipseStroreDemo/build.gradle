plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.tk.learn'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudAzureVersion', "5.16.0")
}

dependencies {
	implementation( enforcedPlatform("com.azure.spring:spring-cloud-azure-dependencies:${springCloudAzureVersion}"))
	implementation 'org.eclipse.store:integrations-spring-boot3:1.4.0'
	implementation 'org.eclipse.store:integrations-spring-boot3-console:1.4.0'
	implementation 'org.eclipse.store:afs-azure-storage:1.4.0'
	implementation 'com.azure.spring:spring-cloud-azure-starter-storage'
//	implementation 'org.springframework.boot:spring-boot-devtools:2.7.12'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'io.micrometer:micrometer-tracing-bridge-brave'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks{
	bootRun{
		jvmArgs = [
				"--add-opens=java.base/java.util=ALL-UNNAMED",
				"--add-exports=java.base/jdk.internal.misc=ALL-UNNAMED",
				"--add-opens=java.base/java.lang=ALL-UNNAMED",
				"--add-opens=java.base/java.time=ALL-UNNAMED"
		]
	}
}